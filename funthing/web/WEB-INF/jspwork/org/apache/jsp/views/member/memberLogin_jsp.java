/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.54
 * Generated at: 2020-05-12 08:54:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberLogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script  src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("\t<style>\r\n");
      out.write("            #loginform{\r\n");
      out.write("                width : 600px;\r\n");
      out.write("                margin: 0 auto;\r\n");
      out.write("                /* border: 1px solid black; */\r\n");
      out.write("            }\r\n");
      out.write("            #h2{\r\n");
      out.write("                text-align: center;\r\n");
      out.write("            }\r\n");
      out.write("            #logintable{\r\n");
      out.write("                width: 600px;\r\n");
      out.write("                /* text-align: center; */\r\n");
      out.write("            }\r\n");
      out.write("            a{\r\n");
      out.write("                text-decoration:none;\r\n");
      out.write("                color:  lightgray;\r\n");
      out.write("            }\r\n");
      out.write("            input::-webkit-input-placeholder { \r\n");
      out.write("                color: lightgray; \r\n");
      out.write("            }\r\n");
      out.write("            #div1{\r\n");
      out.write("                padding: 20px; \r\n");
      out.write("                font-size: 25px; \r\n");
      out.write("                background: lightgray; \r\n");
      out.write("                margin: 0 auto; \r\n");
      out.write("                text-align: center;\r\n");
      out.write("            }\r\n");
      out.write("            .log1{\r\n");
      out.write("                height: 30px;\r\n");
      out.write("                width: 400px; \r\n");
      out.write("                border-radius: 8px;\r\n");
      out.write("            }\r\n");
      out.write("            #btn{\r\n");
      out.write("                height: 100px; \r\n");
      out.write("                width: 180px; \r\n");
      out.write("                color: white; \r\n");
      out.write("                font-size: 16px; \r\n");
      out.write("                border-radius: 8px; \r\n");
      out.write("                background: darkgrey;\r\n");
      out.write("            }\r\n");
      out.write("            #check1{\r\n");
      out.write("                float: left;\r\n");
      out.write("            }\r\n");
      out.write("            #idsave{\r\n");
      out.write("                color: lightgray;\r\n");
      out.write("            }\r\n");
      out.write("            #signUp{\r\n");
      out.write("                background: darkgrey; \r\n");
      out.write("                color: white; \r\n");
      out.write("                width: 600px; \r\n");
      out.write("                text-align: center; \r\n");
      out.write("                height: 80px; \r\n");
      out.write("                border-radius: 8px; \r\n");
      out.write("                font-size: 16px;\r\n");
      out.write("            }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"div1\">\r\n");
      out.write("            LOGIN\r\n");
      out.write("        </div>\r\n");
      out.write("        <br>\r\n");
      out.write("        <br>\r\n");
      out.write("        <br>\r\n");
      out.write("        <br>\r\n");
      out.write("        <form id=\"loginform\" method=\"get\" action=\"");
      out.print(request.getContextPath() );
      out.write("/login.me\">\r\n");
      out.write("            <h2 id=\"h2\">회원 로그인</h2>\r\n");
      out.write("            <hr>\r\n");
      out.write("            <br>\r\n");
      out.write("            <table id=\"logintable\">\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        <input type=\"text\" class=\"log1\" name=\"userId\" id=\"userId\" placeholder=\"이름을 입력해주세요\">\r\n");
      out.write("                    </td>\r\n");
      out.write("                    <td rowspan=\"2\">\r\n");
      out.write("                        <input type=\"submit\" id=\"btn\" value=\"LOGIN\">\r\n");
      out.write("                    </td>\r\n");
      out.write("                    \r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        <input type=\"password\" class=\"log1\" name=\"userPwd\" id=\"userPwd\" placeholder=\"비밀번호를 입력해주세요\">\r\n");
      out.write("                    </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </table>\r\n");
      out.write("            <div>\r\n");
      out.write("                <input type=\"checkbox\" id=\"check1\">\r\n");
      out.write("                <label id=\"idsave\">아이디 저장</label>\r\n");
      out.write("                \r\n");
      out.write("                <label style=\"float: right;\"><a href=\"#<!-- ../searchPwd/searchPwd.jsp -->\">비밀번호찾기</a></label>\r\n");
      out.write("                <label style=\"float: right; text-decoration: none\"><a href=\"#<!-- searchId.jsp -->\">아이디찾기 /&nbsp;</a></laebel>\r\n");
      out.write("                \r\n");
      out.write("            </div>\r\n");
      out.write("            <br>\r\n");
      out.write("            <hr>\r\n");
      out.write("            <br>\r\n");
      out.write("            <input type=\"button\" id=\"signUp\" value=\"회원가입\">\r\n");
      out.write("            <br>\r\n");
      out.write("            <br>\r\n");
      out.write("            <hr>\r\n");
      out.write("            <br>\r\n");
      out.write("            <div style=\"text-align: center;\">\r\n");
      out.write("                <label>SNS 로그인</label>\r\n");
      out.write("                <br>\r\n");
      out.write("                <br>\r\n");
      out.write("                <br>\r\n");
      out.write("                <br>\r\n");
      out.write("                카카오 아이디 로그인\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </form>\r\n");
      out.write("        <script>\r\n");
      out.write("            $(function(){\r\n");
      out.write("            \t// 아이디\r\n");
      out.write("                $(\"#userId\").change(function(){\r\n");
      out.write("                    var value = $(\"#userId\").val();\r\n");
      out.write("                    var reg = /^[a-z0-9]{4,12}$/;\r\n");
      out.write("                    if(!reg.test(value)){\r\n");
      out.write("                        alert(\"영문자와 숫자로 4글자 이상 12글자 이하여야 합니다.\");\r\n");
      out.write("                        $(\"#userId\").focus().val('');\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            \t\r\n");
      out.write("            \t// 비밀번호\r\n");
      out.write("                $(\"#userPwd\").change(function(){\r\n");
      out.write("                    var value = $(\"#userPwd\").val();\r\n");
      out.write("                    var reg = /^[a-z0-9]{6,18}$/;\r\n");
      out.write("                    if(!reg.test(value)){\r\n");
      out.write("                        alert(\"영문자와 숫자로 6글자 이상 12글자 이하여야 합니다.\");\r\n");
      out.write("                        $(\"#userPwd\").focus().val('');\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("                \r\n");
      out.write("            \t// 회원가입 버튼\r\n");
      out.write("                $(\"#signUp\").click(function(){\r\n");
      out.write("                \tlocation.href=\"#\";\r\n");
      out.write("                });\r\n");
      out.write("                \r\n");
      out.write("                // 아이디 저장 코드\r\n");
      out.write("                var key = getCookie(\"key\");\r\n");
      out.write("                $(\"#userId\").val(key); \r\n");
      out.write("                 \r\n");
      out.write("                if($(\"#userId\").val() != \"\"){ // 그 전에 ID를 저장해서 처음 페이지 로딩 시, 입력 칸에 저장된 ID가 표시된 상태라면,\r\n");
      out.write("                    $(\"#check1\").attr(\"checked\", true); // ID 저장하기를 체크 상태로 두기.\r\n");
      out.write("                }\r\n");
      out.write("                 \r\n");
      out.write("                $(\"#check1\").change(function(){ // 체크박스에 변화가 있다면,\r\n");
      out.write("                    if($(\"#check1\").is(\":checked\")){ // ID 저장하기 체크했을 때,\r\n");
      out.write("                        setCookie(\"key\", $(\"#userId\").val(), 7); // 7일 동안 쿠키 보관\r\n");
      out.write("                    }else{ // ID 저장하기 체크 해제 시,\r\n");
      out.write("                        deleteCookie(\"key\");\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("                 \r\n");
      out.write("                // ID 저장하기를 체크한 상태에서 ID를 입력하는 경우, 이럴 때도 쿠키 저장.\r\n");
      out.write("                $(\"#userId\").keyup(function(){ // ID 입력 칸에 ID를 입력할 때,\r\n");
      out.write("                    if($(\"#check1\").is(\":checked\")){ // ID 저장하기를 체크한 상태라면,\r\n");
      out.write("                        setCookie(\"key\", $(\"#userId\").val(), 7); // 7일 동안 쿠키 보관\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("            function setCookie(cookieName, value, exdays){\r\n");
      out.write("                var exdate = new Date();\r\n");
      out.write("                exdate.setDate(exdate.getDate() + exdays);\r\n");
      out.write("                var cookieValue = escape(value) + ((exdays==null) ? \"\" : \"; expires=\" + exdate.toGMTString());\r\n");
      out.write("                document.cookie = cookieName + \"=\" + cookieValue;\r\n");
      out.write("            }\r\n");
      out.write("             \r\n");
      out.write("            function deleteCookie(cookieName){\r\n");
      out.write("                var expireDate = new Date();\r\n");
      out.write("                expireDate.setDate(expireDate.getDate() - 1);\r\n");
      out.write("                document.cookie = cookieName + \"= \" + \"; expires=\" + expireDate.toGMTString();\r\n");
      out.write("            }\r\n");
      out.write("             \r\n");
      out.write("            function getCookie(cookieName) {\r\n");
      out.write("                cookieName = cookieName + '=';\r\n");
      out.write("                var cookieData = document.cookie;\r\n");
      out.write("                var start = cookieData.indexOf(cookieName);\r\n");
      out.write("                var cookieValue = '';\r\n");
      out.write("                if(start != -1){\r\n");
      out.write("                    start += cookieName.length;\r\n");
      out.write("                    var end = cookieData.indexOf(';', start);\r\n");
      out.write("                    if(end == -1)end = cookieData.length;\r\n");
      out.write("                    cookieValue = cookieData.substring(start, end);\r\n");
      out.write("                }\r\n");
      out.write("                return unescape(cookieValue);\r\n");
      out.write("            }\r\n");
      out.write("            // 아이디 저장 코드 end\r\n");
      out.write("            \r\n");
      out.write("        </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
